name: Deploy to GitHub Pages

on:
  workflow_dispatch:
  push:
  repository_dispatch:
    types: [run-deployment]
permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
          token: ${{ secrets.CROSS_REPO_TOKEN }}
              
      - name: Configure Submodules to Track Branches
        run: |
          git submodule foreach '
            git checkout main || git checkout -b main
            git branch --set-upstream-to=origin/main main
          '
          
      - name: Update Submodules
        run: git submodule update --recursive --remote
        
      - name: Configure Git Identity
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"

      - name: Setup GitHub Pages
        uses: actions/configure-pages@v5

      - name: Check and Compress Database Files
        run: |
          find ./assets -name '*.db' -exec gzip -9 {} \; -exec echo "已压缩： {}" \;

      - name: Commit Changes
        shell: bash
        run: |
          git submodule foreach --recursive bash -c '
            if [[ -n "$(git status --porcelain)" ]]; then
              git add .
              git commit -m "压缩子模块资源"
            fi
          '

      - name: Decompress Assets
        run: find ./assets -name '*.gz' -exec gzip -d {} \;

      - name: Update Assets
        run: |
          chmod +x update.sh
          ./update.sh
      - name: Update Submodule References
        run: |
          submodule_paths=$(git submodule status | awk '{ print $2 }')
          for submodule in $submodule_paths; do
            git add $submodule
          done
          if git diff --cached --quiet; then
            echo "子模块已是最新状态"
          else
            git commit -m "更新子模块指针 [skip ci]"
            git push --recurse-submodules=on-demand origin HEAD
          fi
          
      - name: Check if should deploy
        id: check_deploy
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "Manual trigger – proceeding with deployment."
            echo "should_deploy=true" >> $GITHUB_ENV
            exit 0
          fi
          if [ -f .last_deployed_commit ]; then
            LAST_DEPLOYED=$(cat .last_deployed_commit)
          else
            LAST_DEPLOYED=""
          fi
          CURRENT=$(git rev-parse HEAD)
          echo "Current commit: $CURRENT"
          echo "Last deployed commit: $LAST_DEPLOYED"
          if [ "$CURRENT" = "$LAST_DEPLOYED" ]; then
            echo "No new commit detected. Skipping deployment."
            echo "should_deploy=false" >> $GITHUB_ENV
          else
            echo "New commit detected. Proceeding with deployment."
            echo "should_deploy=true" >> $GITHUB_ENV
            echo $CURRENT > .last_deployed_commit
            git add .last_deployed_commit
            git commit -m "更新部署sha [skip ci]"
            git push origin
          fi
          
      - name: Upload Artifact to GitHub Pages
        uses: actions/upload-pages-artifact@v3
        if: ${{ env.should_deploy == 'true' }}
        with:
          path: './assets'

      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4
        if: ${{ env.should_deploy == 'true' }}